/*Exports PNGs based on bounds of all the selected elements.pwever@knittingpixel.com */function getTargetFile(docName, ext, destFolder) {	var newName = "";	// if name has no dot (and hence no extension),	// just append the extension	if (docName.indexOf('.') < 0) {		newName = docName + ext;	} else {		var dot = docName.lastIndexOf('.');		newName += docName.substring(0, dot);		newName += ext;	}		// Create the file object to save to	var myFile = new File( destFolder + '/' + newName );		// Preflight access rights	if (myFile.open("w")) {		myFile.close();	}	else {		throw new Error('Access is denied');	}	return myFile;}function compareElements(ela, elb) {	if (elb.x > ela.x) {		return 1;	} else {		return 0;	}}if (app.documents.length > 0) {		var doc = app.activeDocument;	var dest_folder = null;	var ppi = 72;	dest_folder = Folder.selectDialog( 'Select folder for export.', '~' );		if (doc!=null && dest_folder!=null && (doc.selection.length>0)) {				// save selection		// selection is cleared when layers are turned invisible		var elements = doc.selection;		//var sorted = [elements[0]];		//for (var i=1; i<elements.length; i++) {		//	var sorted_count = sorted.length		//	for (var j=0; j<sorted.length; j++) {		//		if (elements[i].position[1] > sorted[j].position[1]) { // y		//			// if the y is smaller, automatically insert		//			// note: y is measured from the top		//			sorted.splice(j,0,elements[i]);		//			break;		//		} else if (elements[i].position[1] == sorted[j].position[1]) {		//			// check the x first		//			if (elements[i].position[0] < sorted[j].position[0]) {		//				sorted.splice(j,0,elements[i]);		//				break;		//			}		//		}		//	}		//}		//elements = sorted;						var image_options = new ImageCaptureOptions();		image_options.antiAliasing = true;		image_options.matte = false;		image_options.transparency = true;		image_options.resolution = ppi;				for (var j=0; j<elements.length; j++) {			var coordinates = "(y" + Math.floor(elements[j].position[1]) + "x" + Math.floor(elements[j].position[0]) + ")";			var target_file = getTargetFile(doc.name, "-"+coordinates+".png", dest_folder);			doc.imageCapture(target_file, elements[j].geometricBounds, image_options)		}				// set selection back		doc.selection = elements;	}			} else {	alert('Open a document before running this script', 'Error running Export UIs.jsx');}